
git commit -am "message"
# Adds modified files with commit message

git remote rm origin
# removes origin

git remote add origin
# ssh: git@github.com:YcleptInsan/GitFoundations

git log --oneline
# prints a condensed log

git log --oneline | wc -1
# represents all commits made as word

git log --oneline --graph
# Graphical representation of and Condensed log history

git log --graph --oneline --all --decorate
# all branches, labels to commits, graph, and oneline commits.

git config --global alias.lga "log --graph --oneline --all --decorate"
# Sets Alias for short hand phrases that stylize the way you view git information.

git shortlog
# list of authors and commit messages.

git shortlog -sne
# summary/numerically decreasing/ email

git show header
# Will show last commit

git remote
# shows remote repositories

git remote -v
# shows remote repositories in Verbose Mode. Allowing you to see the url and the fetch/push

git remote add origin https://github.com/YcleptInsan/(something.git)
# Can pull from multiple repository.
  Ability to have multiple remotes.

git fetch
# Will pull down changes from the remotely added repositories

git merge origin/master
# merging the origin feature branch into the master

git pull
# Similar to the command above it pulls down a remote repository to merge with a local repository

git checkout -b (branch_name)
# adds branch and moves to it.

git reflog
# Logs all references pointed at HEAD.

git stash
# holding area for pending changes. As you might not want to commit the changes that are staged at the moment,

git stash apply
# applies the stored modified content to content added after the fact.

git stash list
# shows list of stashed items

git stash pop
# same as apply, but also removes it from the stash list.

git stash drop
# drops the last stored change from the stash


git branch --set-upstream master origin/master
# Setting up an upstream tracking branch. reflects the branch remotely that the local branch mirrors. That way git pull will be pulling from the repo. specified

git branch -r
# shows remote branches

git branch branch1 (hash)
# creates branch and add the specified commit in hash to the branch head.

git branch -m branch1 branch2
# moves/renames branch to newly specified branch.

git tag (-a)(s)(v)(v1.0)
# known points where you can tag versions.
-a_with_Message for message
s_Signed is for signed. RSA key
v for verified. Verifying a tag is signed or not.

git push --tags
# pushes tags to remote repository. Allowing version control and easy access to see the state of code at a given point in time.

git mergetool
# tools for preforming merge
~ kdif3 ~ look this up for 3 way merging
~ beyond compare ~

git diff --cashed
# Compares repository to staging area

git rebase master
# relocating current branch to master

git rebase continue
# continues merge after you solve merging conflicts.

git cherry-pick
# allows you to pick a single commit to branch that you are currently on.

git push origin (local repo): (remote branch_name)
# To delete remote branches push with empty local and specify the remote branch name you wish to delete.

~ Branches are simply labels on the shaw 1 hashes of the commits ~

-------------------------------------------------
              Git Protocols
        port |   notes
http(s) 80/443   Read-write, passwords for auth  and                 Firewall friendly.

git     9418     Read-only, Anonymous only

ssh     22       Read-write, SSH keys for auth

file    n/a       Read-write, local only

---------------------------------------------------
