Python Programs 

- a program is a sequence of definitions and commands 
	- definitions evaluated 
	- commands executed by Python interpreter in a shell 

- commands (statements) instruct interpreter to do something 

- can be typed directly in a shell or stored in a file that is read into the shell and evaluated 


Objects
 programs manipulate data objects
 objects have a type that defines the kinds of things programs can do to them 

 objects are:
 scalar (cannot be subdivided)
 non-scalar (have internal structure that can be accessed or pull out parts) 


 Scalar Objects in python 

 int  - represent integers, ex.5 
 float - represent real numbers, ex. 3.27
 bool - represent Boolean values True and False 
 NoneType - special and has one value, None
 can use type() - to see the type of an object

 sometimes you many want to change type - this is called casting 

 3.5
 type(3.5) // float 
 float(5) // 5.0 
 int(3.9) // 3 
 3 + 2 // 5 expression 
 print(3+5) // controls output 5 print returns NoneType (look at the shell, you shouldn't see an 'out') Out/Nil/undefined because no value is 'returned' 


 Expressions 
 combine objects and operators to form expressions 
 an expression has a value, which has a type 

 syntax for a simple expression is: 
 obj operator obj 

 i +  j -> the sum 
 i - j -> the difference
 i * j -> the product
 i / j -> the division 
 i // j -> int division (quotient) 
 i % j -> the remainder when i is divided by j 
 i ** j -> the power | i to the power of j


 Simple Operations 
 parantheses used to tell python to do these 
	operations first
	
	3*5+1 evaluates to 16
	
	3*(5+1) evaluates to 16 

Operator precedence 
**
*
/
+ and - 

executed left to right, as appear in expression 
